#
# Checking the conversions with newer 0.1.x modules
#

use v6.d;
use Test;
use lib '../version-new/lib';
use lib 'lib';
use Date::Calendar::Strftime:ver<0.1.0>;
use Date::Calendar::Aztec;
use Date::Calendar::Aztec::Cortes;
use Date::Calendar::Bahai;
use Date::Calendar::Bahai::Astronomical;
use Date::Calendar::Coptic;
use Date::Calendar::Ethiopic;
use Date::Calendar::Hebrew;
use Date::Calendar::Hijri;
use Date::Calendar::Gregorian;
use Date::Calendar::FrenchRevolutionary;
use Date::Calendar::FrenchRevolutionary::Arithmetic;
use Date::Calendar::FrenchRevolutionary::Astronomical;
use Date::Calendar::Julian;
use Date::Calendar::Julian::AUC;
use Date::Calendar::Maya;
use Date::Calendar::Maya::Astronomical;
use Date::Calendar::Maya::Spinden;
use Date::Calendar::Persian;
use Date::Calendar::Persian::Astronomical;

my $ver-jl = '0.1.0';
my @data  = (
       (2024,  4,  5, before-sunrise, 'gr', "Thursday 18 Apr 2024 ☾", "Thu 05 Apr 2024 ☾")
     , (2024,  4,  5, daylight,       'gr', "Thursday 18 Apr 2024 ☼", "Thu 05 Apr 2024 ☼")
     , (2024,  4,  5, after-sunset,   'gr', "Thursday 18 Apr 2024 ☽", "Thu 05 Apr 2024 ☽")
     , (2024,  1,  1, before-sunrise, 'he', "Yom Rishon 04 Shv 5784 ☾", "Sun 01 Jan 2024 ☾")
     , (2024,  1,  1, daylight,       'he', "Yom Rishon 04 Shv 5784 ☼", "Sun 01 Jan 2024 ☼")
     , (2024,  1,  1, after-sunset,   'he', "Yom Sheni 05 Shv 5784 ☽", "Sun 01 Jan 2024 ☽")
            );

# for later tests
my @data2 = (
       (2020, 10, 14, before-sunrise, 'ba', "Fiḍál 12 Ilm 0177 ☾", "Tue 14 Oct 2020 ☾")
     , (2020, 10, 14, daylight,       'ba', "Fiḍál 12 Ilm 0177 ☼", "Tue 14 Oct 2020 ☼")
     , (2020, 10, 14, after-sunset,   'ba', "ʻIdál 13 Ilm 0177 ☽", "Tue 14 Oct 2020 ☽")
     , (2022,  4, 23, before-sunrise, 'be', "Istiqlál 09 Jam 0179 ☾", "Fri 23 Apr 2022 ☾")
     , (2022,  4, 23, daylight,       'be', "Istiqlál 09 Jam 0179 ☼", "Fri 23 Apr 2022 ☼")
     , (2022,  4, 23, after-sunset,   'be', "Jalál 10 Jam 0179 ☽", "Fri 23 Apr 2022 ☽")
     , (2024, 12, 31, before-sunrise, 'co', "Pesnau 05 Tob 1741 ☾", "Mon 31 Dec 2024 ☾")
     , (2024, 12, 31, daylight,       'co', "Pesnau 05 Tob 1741 ☼", "Mon 31 Dec 2024 ☼")
     , (2024, 12, 31, after-sunset,   'co', "Pshoment 06 Tob 1741 ☽", "Mon 31 Dec 2024 ☽")
     , (2023,  3, 10, before-sunrise, 'et', "Arb 14 Mag 2015 ☾", "Thu 10 Mar 2023 ☾")
     , (2023,  3, 10, daylight,       'et', "Arb 14 Mag 2015 ☼", "Thu 10 Mar 2023 ☼")
     , (2023,  3, 10, after-sunset,   'et', "Qedame 15 Mag 2015 ☽", "Thu 10 Mar 2023 ☽")
     , (2024,  4, 15, before-sunrise, 'fr', "Décadi 10 Flo 0232 ☾", "Sun 15 Apr 2024 ☾")
     , (2024,  4, 15, daylight,       'fr', "Décadi 10 Flo 0232 ☼", "Sun 15 Apr 2024 ☼")
     , (2024,  4, 15, after-sunset,   'fr', "Décadi 10 Flo 0232 ☽", "Sun 15 Apr 2024 ☽")
     , (2022,  9, 30, before-sunrise, 'fa', "Duodi 22 Vnd 0231 ☾", "Thu 30 Sep 2022 ☾")
     , (2022,  9, 30, daylight,       'fa', "Duodi 22 Vnd 0231 ☼", "Thu 30 Sep 2022 ☼")
     , (2022,  9, 30, after-sunset,   'fa', "Duodi 22 Vnd 0231 ☽", "Thu 30 Sep 2022 ☽")
     , (2021, 10, 13, before-sunrise, 'fe', "Quintidi 05 Bru 0230 ☾", "Tue 13 Oct 2021 ☾")
     , (2021, 10, 13, daylight,       'fe', "Quintidi 05 Bru 0230 ☼", "Tue 13 Oct 2021 ☼")
     , (2021, 10, 13, after-sunset,   'fe', "Quintidi 05 Bru 0230 ☽", "Tue 13 Oct 2021 ☽")
     , (2025,  7, 13, before-sunrise, 'hi', "Yaum al-Sabt 30 Muh 1447 ☾", "Sat 13 Jul 2025 ☾")
     , (2025,  7, 13, daylight,       'hi', "Yaum al-Sabt 30 Muh 1447 ☼", "Sat 13 Jul 2025 ☼")
     , (2025,  7, 13, after-sunset,   'hi', "Yaum al-Ahad 01 Saf 1447 ☽", "Sat 13 Jul 2025 ☽")
     , (2021,  6, 15, before-sunrise, 'jc', "Monday 15 Jun 2774 ☾", "Mon 15 Jun 2021 ☾")
     , (2021,  6, 15, daylight,       'jc', "Monday 15 Jun 2774 ☼", "Mon 15 Jun 2021 ☼")
     , (2021,  6, 15, after-sunset,   'jc', "Monday 15 Jun 2774 ☽", "Mon 15 Jun 2021 ☽")
     , (2024,  8, 23, before-sunrise, 'pe', "Panj shanbe 15 Sha 1403 ☾", "Thu 23 Aug 2024 ☾")
     , (2024,  8, 23, daylight,       'pe', "Panj shanbe 15 Sha 1403 ☼", "Thu 23 Aug 2024 ☼")
     , (2024,  8, 23, after-sunset,   'pe', "Panj shanbe 15 Sha 1403 ☽", "Thu 23 Aug 2024 ☽")
     , (2024, 12,  3, before-sunrise, 'pa', "Do shanbe 26 Aza 1403 ☾", "Mon 03 Dec 2024 ☾")
     , (2024, 12,  3, daylight,       'pa', "Do shanbe 26 Aza 1403 ☼", "Mon 03 Dec 2024 ☼")
     , (2024, 12,  3, after-sunset,   'pa', "Do shanbe 26 Aza 1403 ☽", "Mon 03 Dec 2024 ☽")
            );
my @data-maya = (
       (2024, 11, 13, before-sunrise, 'm0', " 0 Mac 7 Etznab"            , "Tue 13 Nov 2024 ☾")
     , (2024, 11, 13, daylight,       'm0', " 1 Mac 7 Etznab"            , "Tue 13 Nov 2024 ☼")
     , (2024, 11, 13, after-sunset,   'm0', " 1 Mac 8 Cauac"             , "Tue 13 Nov 2024 ☽")
     , (2020,  7, 14, before-sunrise, 'm1', "15 Xul 8 Ben"               , "Mon 14 Jul 2020 ☾")
     , (2020,  7, 14, daylight,       'm1', "16 Xul 8 Ben"               , "Mon 14 Jul 2020 ☼")
     , (2020,  7, 14, after-sunset,   'm1', "16 Xul 9 Ix"                , "Mon 14 Jul 2020 ☽")
     , (2023,  3,  4, before-sunrise, 'm2', " 9 Cumku 10 Caban"          , "Fri 04 Mar 2023 ☾")
     , (2023,  3,  4, daylight,       'm2', "10 Cumku 10 Caban"          , "Fri 04 Mar 2023 ☼")
     , (2023,  3,  4, after-sunset,   'm2', "10 Cumku 11 Etznab"         , "Fri 04 Mar 2023 ☽")
     , (2022, 10, 25, before-sunrise, 'a0', "14 Atlcahualo 11 Tochtli"   , "Mon 25 Oct 2022 ☾")
     , (2022, 10, 25, daylight,       'a0', "15 Atlcahualo 11 Tochtli"   , "Mon 25 Oct 2022 ☼")
     , (2022, 10, 25, after-sunset,   'a0', "15 Atlcahualo 12 Atl"       , "Mon 25 Oct 2022 ☽")
     , (2021,  6, 24, before-sunrise, 'a1', "19 Tepeilhuitl 7 Calli"     , "Wed 24 Jun 2021 ☾")
     , (2021,  6, 24, daylight,       'a1', "20 Tepeilhuitl 7 Calli"     , "Wed 24 Jun 2021 ☼")
     , (2021,  6, 24, after-sunset,   'a1', "20 Tepeilhuitl 8 Cuetzpalin", "Wed 24 Jun 2021 ☽")
            );

my %class =   a0 => 'Date::Calendar::Aztec'
            , a1 => 'Date::Calendar::Aztec::Cortes'
            , ba => 'Date::Calendar::Bahai'
            , be => 'Date::Calendar::Bahai::Astronomical'
            , gr => 'Date::Calendar::Gregorian'
            , co => 'Date::Calendar::Coptic'
            , et => 'Date::Calendar::Ethiopic'
            , fr => 'Date::Calendar::FrenchRevolutionary'
            , fa => 'Date::Calendar::FrenchRevolutionary::Arithmetic'
            , fe => 'Date::Calendar::FrenchRevolutionary::Astronomical'
            , he => 'Date::Calendar::Hebrew'
            , hi => 'Date::Calendar::Hijri'
            , jl => 'Date::Calendar::Julian'
            , jc => 'Date::Calendar::Julian::AUC'
            , m0 => 'Date::Calendar::Maya'
            , m1 => 'Date::Calendar::Maya::Astronomical'
            , m2 => 'Date::Calendar::Maya::Spinden'
            , pe => 'Date::Calendar::Persian'
            , pa => 'Date::Calendar::Persian::Astronomical'
            ;

plan 12 × @data.elems;

for (@data) -> $datum {
  my ($year, $month, $day, $daypart, $cal, $str2, $str3) = $datum;
  my Date::Calendar::Julian $d1 .= new(year => $year, month => $month, day => $day, daypart => $daypart);

  # push-push
  my $d2 = $d1.to-date(%class{$cal});
  is($d2.strftime("%A %d %b %Y %Ep"), $str2, "testing push with $str2");
  is($d2.^ver.Str.substr(0, 4), '0.1.');
  my $d3 = $d2.to-date(%class<jl>);
  is($d3.strftime("%a %d %b %Y %Ep"), $str3, "testing push-push with $str2 and $str3");
  is($d3.^ver, $ver-jl);

  # push-pull
  my Date::Calendar::Julian $d4 .= new-from-date($d2);
  is($d4.strftime("%a %d %b %Y %Ep"), $str3, "testing push-pull with $str2 and $str3");
  is($d4.^ver, $ver-jl);

  # pull-push
  my $d5 = ::(%class{$cal}).new-from-date($d1);
  is($d5.strftime("%A %d %b %Y %Ep"), $str2, "testing pull with $str2");
  is($d5.^ver.Str.substr(0, 4), '0.1.');
  my $d6 = $d5.to-date(%class<jl>);
  is($d6.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-push with $str2 and $str3");
  is($d6.^ver, $ver-jl);

  # pull-pull
  my Date::Calendar::Julian $d7 .= new-from-date($d5);
  is($d7.strftime("%a %d %b %Y %Ep"), $str3, "testing pull-pull with $str2 and $str3");
  is($d7.^ver, $ver-jl);
}

done-testing;
